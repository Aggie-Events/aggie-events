services:
  app:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: app_container
    environment:
      - NODE_ENV=production
    depends_on:
      - db
      - reverse-proxy
    ports:
      - "3000:3000"
  reverse-proxy:
      image: traefik:v3.1.2
      container_name: traefik
      command:
        #- "--log.level=DEBUG"
        - "--api.insecure=true"
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"
        - "--entryPoints.web.address=:80"
      ports:
        # HTTP
        - "80:80"
        # The Web UI (enabled by --api.insecure=true)
        - "8080:8080"
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock:ro"
  db:
    container_name: postgres_container
    image: postgres
    restart: always
    volumes: 
      - ./pgdata: /var/lib/postgresql/data
    ports: 
      - "5433:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: "agev"
    depends_on:
      - reverse-proxy
  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)" # Replace with domain
      - "traefik.http.routers.whoami.entrypoints=web"
  
